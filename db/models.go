// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type ControlBank string

const (
	ControlBankBTG ControlBank = "BTG"
	ControlBankIta ControlBank = "Ita√∫"
)

func (e *ControlBank) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ControlBank(s)
	case string:
		*e = ControlBank(s)
	default:
		return fmt.Errorf("unsupported scan type for ControlBank: %T", src)
	}
	return nil
}

type NullControlBank struct {
	ControlBank ControlBank
	Valid       bool // Valid is true if ControlBank is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullControlBank) Scan(value interface{}) error {
	if value == nil {
		ns.ControlBank, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ControlBank.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullControlBank) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ControlBank), nil
}

type ControlFile string

const (
	ControlFilePdf ControlFile = "pdf"
	ControlFileJpg ControlFile = "jpg"
	ControlFilePng ControlFile = "png"
)

func (e *ControlFile) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ControlFile(s)
	case string:
		*e = ControlFile(s)
	default:
		return fmt.Errorf("unsupported scan type for ControlFile: %T", src)
	}
	return nil
}

type NullControlFile struct {
	ControlFile ControlFile
	Valid       bool // Valid is true if ControlFile is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullControlFile) Scan(value interface{}) error {
	if value == nil {
		ns.ControlFile, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ControlFile.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullControlFile) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ControlFile), nil
}

type ControlDocument struct {
	ID          pgtype.UUID
	UserID      pgtype.UUID
	CreatedAt   pgtype.Timestamptz
	UpdateAt    pgtype.Timestamptz
	RevokedAt   pgtype.Timestamptz
	Name        string
	Type        ControlFile
	Document    pgtype.Uint32
	Description pgtype.Text
}

type ControlFinancialRelease struct {
	ID          pgtype.UUID
	UserID      pgtype.UUID
	CreatedAt   pgtype.Timestamptz
	UpdateAt    pgtype.Timestamptz
	RevokedAt   pgtype.Timestamptz
	EffectAt    pgtype.Timestamptz
	Institution ControlBank
	Agency      int64
	Account     int64
	Category1   string
	Category2   string
	Category3   string
	Type1       string
	Type2       string
	Type3       string
	Description pgtype.Text
}

type ControlUser struct {
	ID        pgtype.UUID
	CreatedAt pgtype.Timestamptz
	UpdateAt  pgtype.Timestamptz
	RevokedAt pgtype.Timestamptz
	Email     pgtype.Text
	Username  pgtype.Text
	FirstName string
	LastName  string
	Password  string
}
